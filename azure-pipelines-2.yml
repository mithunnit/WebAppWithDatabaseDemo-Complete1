trigger: 
 branches:
  include:
    - master
 paths:
   exclude:
     - docs/*
     - Terraform/*

parameters:
  - name: runcompletepipeline
    displayName: Run all tasks ?
    type: boolean
    default: true

stages:
  - stage: Build_Stage
    displayName: :Build Apps
    jobs:
    - job: Webapp
      displayName: 'Build Web App'
      pool: 
        vmImage: 'windows-2019'
      variables:
        buildConfiguration: 'Release'
      steps:
 
      - task: UseDotNet@2
        displayName: 'Use .NET Core sdk'
        inputs:
          packageType: 'sdk'
          version: '6.0.100'
 
      - task: DotNetCoreCLI@2
        displayName: Restore-Nuget-Packages
        inputs:
          command: 'restore'
          projects: '**/WebApp.csproj'
 
      - task: SonarCloudPrepare@1
        displayName: 'Prepare analysis on SonarCloud'
        inputs:
          SonarCloud: 'SonarCloud'
          organization: 'mithunnit'
          scannerMode: 'MSBuild'
          projectKey: 'WebAppWithDatabaseDemo-Complete'
 
      - task: DotNetCoreCLI@2
        displayName: Build-Web-App
        inputs:
          command: 'build'
          projects: '**/WebApp.csproj'
          arguments: '--configuration -$(buildConfiguration)'
 
      - task: DotNetCoreCLI@2
        displayName: Run-Unit-Tests
        inputs:
          command: 'test'
          projects: '**/WebApp.UnitTest.csproj'
          arguments: '--configuration -$(buildConfiguration)'
 
      - task: DotNetCoreCLI@2
        displayName: Publish
        inputs:
          command: publish
          publishWebProjects: True
          arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
          zipAfterPublish: True
 
      - task: SonarCloudAnalyze@1
        displayName: Run Code Analysis'
 
      - task: SonarCloudPublish@1
        displayName: 'Publish Quality Gate Result'
 
      - task: PublishBuildArtifacts@1
        displayName: 'Publish-Artifact.(WebApp.zip)'
        inputs:
           PathtoPublish: '$(Build.ArtifactStagingDirectory)'
           ArtifactName: 'drop'

    - job: Database
      displayName: 'Build Database'
      pool:
        vmImage: 'windows-2019'

      steps:
 
       - task: MSBuild@1
         displayName: 'Build solution WebApp.Database.sqlproj'
         inputs:
           solution: 'WebApp.Database/WebApp.Database.sqlproj'
           msbuildArguments: '/p:OutDir=$(Build.ArtifactStagingDirectory)'
 
       - task: PublishBuildArtifacts@1
         displayName: 'Publish Artifact (Dacpac)'
         inputs:
           PathtoPublish: '$(Build.ArtifactStagingDirectory)'
           ArtifactName: 'dacpac'

    - job: Selenium
      displayName: 'Build UI Tests'
      pool:
        vmImage: 'windows-2019'
  
      steps:
        - task: NuGetToolInstaller@1
          inputs:
            versionSpec: '4.3.0'
  
        - task: NuGetCommand@2
          displayName: 'NuGet restore' 
          inputs:
            command: 'restore'
            restoreSolution: 'WebAppWithDatabase.sln'
  
        - task: MSBuild@1
          displayName: 'Build project SeleniumUiTests.csproj' 
          inputs:
            solution: 'SeleniumUiTests/SeleniumUiTests.csproj'
            msbuildArguments: '/p:OutDir=$(Build.ArtifactStagingDirectory)'
  
        - task: PublishBuildArtifacts@1
          displayName: 'Publish Artifact: UI-Test' 
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'UI-Test'

    - job: Infrastructure
      displayName: 'Copy Infrastructure files (ARM)'
      pool:
        vmImage: 'ubuntu-latest'
  
      steps:
       - task: PublishBuildArtifacts@1
         displayName: 'Publish Artifact: ARM templates'
         inputs:
           PathtoPublish: AzureResourceGroupDeployment
           ArtifactName: 'arm'

  - stage: Dev_Stage
    displayName: Create & Deploy to Dev
    dependsOn: Build_Stage
    variables: 
      azureSubscription: 'Pay-As-You-Go (0da7ae55-f78b-410c-90fb-cef156b34a60)' 
      ResourceGroupName: 'VisualStudioOnline-0FF03BC89D6343EF8883DC94CAFE9CFD'
      Database.Admin: 'mithunnit'
      Database.Password: 'M!thun@150' # to be secured in Key Vault
      Database.Name: 'EmployeesDB'
      WebAppName: 'mithun-webapp'
      WebAppNameUrl: 'https://$(WebAppName).azurewebsites.net/'
      SqlServerName: 'mithun-sql'
      Prefix: 'tunis'
      Release.EnvironmentName: 'dev'
      UniqueId: '1280' #'$(Build.BuildId)'
      hostingPlanName: 'mithun-service-plan'
  
    jobs:
    - job: Create_DEV
      displayName: Create DEV
      pool:
        vmImage: 'windows-2019'
  
      steps:
    
      - checkout: none
      - task: DownloadBuildArtifacts@1
        displayName: Download ARM templates
        inputs:
            artifactName: 'arm'
            downloadPath: $(System.DefaultWorkingDirectory)
  
      - task: AzureResourceManagerTemplateDeployment@3
        displayName: Validate ARM templates
        inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: 'Pay-As-You-Go (0da7ae55-f78b-410c-90fb-cef156b34a60)'
            subscriptionId: '0da7ae55-f78b-410c-90fb-cef156b34a60'
            action: 'Create Or Update Resource Group'
            resourceGroupName: 'VisualStudioOnline-0FF03BC89D6343EF8883DC94CAFE9CFD'
            location: 'East US'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.DefaultWorkingDirectory)/arm/WebSiteSQLDatabase.json'
            csmParametersFile: '$(System.DefaultWorkingDirectory)/arm/WebSiteSQLDatabase.parameters.json'
            overrideParameters: '-hostingPlanName $(hostingPlanName) -skuName "F1" -skuCapacity 1 -administratorLogin $(Database.Admin) -administratorLoginPassword $(Database.Password) -databaseName $(Database.Name) -collation "SQL_Latin1_General_CP1_CI_AS" -edition "Basic" -maxSizeBytes "1073741824" -requestedServiceObjectiveName "Basic" -webSiteName $(WebAppName) -sqlserverName $(SqlServerName)'
            deploymentMode: 'Validation'

      - task: AzureResourceManagerTemplateDeployment@3
        displayName: Deploy ARM templates
        inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: 'Pay-As-You-Go (0da7ae55-f78b-410c-90fb-cef156b34a60)'
            subscriptionId: '0da7ae55-f78b-410c-90fb-cef156b34a60'
            action: 'Create Or Update Resource Group'
            resourceGroupName: 'VisualStudioOnline-0FF03BC89D6343EF8883DC94CAFE9CFD'
            location: 'East US'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.DefaultWorkingDirectory)/arm/WebSiteSQLDatabase.json'
            csmParametersFile: '$(System.DefaultWorkingDirectory)/arm/WebSiteSQLDatabase.parameters.json'
            overrideParameters: '-hostingPlanName $(hostingPlanName) -skuName "F1" -skuCapacity 1 -administratorLogin $(Database.Admin) -administratorLoginPassword $(Database.Password) -databaseName $(Database.Name) -collation "SQL_Latin1_General_CP1_CI_AS" -edition "Basic" -maxSizeBytes "1073741824" -requestedServiceObjectiveName "Basic" -webSiteName $(WebAppName) -sqlserverName $(SqlServerName)'
            deploymentMode: 'Complete'

    - job: Deploy_DEV
      displayName: Deploy Apps to DEV
      dependsOn: Create_DEV
      pool:
        vmImage: 'windows-2019'
      steps:
      - checkout: none
      - task: DownloadBuildArtifacts@1
        displayName: Download WebApp.zip
        inputs:
            buildType: 'current'
            downloadType: 'single'
            artifactName: 'drop'
            itemPattern: '**/WebApp.zip'
            downloadPath: '$(System.DefaultWorkingDirectory)'
        
      - task: AzureRmWebAppDeployment@4
        displayName: Deploy WebApp to Azure
        inputs:
            ConnectionType: 'AzureRM'
            azureSubscription: 'Pay-As-You-Go (0da7ae55-f78b-410c-90fb-cef156b34a60)'
            appType: 'webApp'
            WebAppName: '$(WebAppName)'
            packageForLinux: '$(System.DefaultWorkingDirectory)/drop/WebApp.zip'
            TakeAppOfflineFlag: true
            JSONFiles: '**/appsettings.json'
      
      - task: DownloadBuildArtifacts@1
        displayName: Download DacPac
        inputs:
            buildType: 'current'
            downloadType: 'single'
            artifactName: 'dacpac'
            itemPattern: '**/*.dacpac'
            downloadPath: '$(System.DefaultWorkingDirectory)'
      
      - task: SqlAzureDacpacDeployment@1
        displayName: Deploy DacPac to SQL Azure
        inputs:
            azureSubscription: 'Pay-As-You-Go (0da7ae55-f78b-410c-90fb-cef156b34a60)'
            AuthenticationType: 'server'
            ServerName: '$(SqlServerName).database.windows.net,1433'
            DatabaseName: '$(Database.Name)'
            SqlUsername: '$(Database.Admin)'
            SqlPassword: '$(Database.Password)'
            deployType: 'DacpacTask'
            DeploymentAction: 'Publish'
            DacpacFile: '$(System.DefaultWorkingDirectory)/dacpac/WebApp.Database.dacpac'
            IpDetectionMethod: 'AutoDetect'
      
    - job: Test_DEV
      displayName: Run Selenium tests in DEV
      dependsOn: Deploy_DEV
      pool:
        vmImage: 'windows-2019'
      steps:
      - checkout: none
      - task: DownloadBuildArtifacts@1
        displayName: Download Selenium Tests
        inputs:
          buildType: 'current'
          downloadType: 'single'
          artifactName: 'UI-Test'
          itemPattern: ''
          downloadPath: '$(System.DefaultWorkingDirectory)'
    
      - task: VSTest@2
        displayName: Run Selenium UI Tests
        inputs:
          testSelector: 'testAssemblies'
          searchFolder: '$(System.DefaultWorkingDirectory)/UI-Test'
          runSettingsFile: '$(System.DefaultWorkingDirectory)/ui-tests/.runsettings'
          overrideTestrunParameters: '-webAppUrl $(WebAppNameUrl)'
          testAssemblyVer2: |
           **\*Test*.dll
           !**\*TestAdapter.dll
           !**\obj\**
          runInParallel: false
          codeCoverageEnabled: true
      
      
       
      
       
      
  

  
  
    
    
    
 
    

      

    
   
