trigger:
- none

pool:
<<<<<<< HEAD
  vmImage: ubuntu-latest

stages:
  - stage: Build_Stage
    displayName: :Build stage
    jobs:
    - job: WebApp
      displayName: 'Build WebApp'
      pool: 
        vmImage: 'windows-2019'
      steps:
       
      - task: UseDotNet@2
        inputs:
          packageType: 'sdk'
          version: '6.0.101'
      
      - task: DotNetCoreCLI@2
        displayName: 'Restore nuget packages'
        inputs:
          command: 'restore'
          projects: |
            **/*.csproj
            !**/*Tests.csproj

      - task: SonarCloudPrepare@1
        inputs:
          SonarCloud: 'SonarCloud-test'
          organization: 'mithunnit-1'
          scannerMode: 'MSBuild'
          projectKey: 'mithunnit_ARM-Template-YAML'
          projectName: 'ARM-Template-YAML'      
      
      - task: DotNetCoreCLI@2
        displayName: 'Build artifact'
        inputs:
          command: 'build'
          projects: |
            **/*.csproj
            !**/*SeleniumUiTests.csproj
          arguments: '--configuration $(BuildConfiguration)'

      - task: SonarCloudAnalyze@1
    
      - task: SonarCloudPublish@1
        inputs:
          pollingTimeoutSec: '300'    

      - task: DotNetCoreCLI@2
        inputs:
          command: 'test'
          projects: '**/*UnitTest.csproj'
          arguments: '--configuration $(BuildConfiguration)'

      - task: DotNetCoreCLI@2
        inputs:
          command: 'publish'
          publishWebProjects: true
          arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'
    
    - job: BuildDB
      displayName: 'Build Database Job'
      pool: 
        vmImage: 'windows-2019'
      steps:

      - task: MSBuild@1
        inputs:
          solution: 'WebApp.Database/WebApp.Database.sqlproj'
          msbuildVersion: 'latest'
          msbuildArguments: '/p:OutDir=$(Build.ArtifactStagingDirectory)'
        
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'dacpac'
          
    - job: ARMfilecreation
      displayName: 'ARM file creation'
      pool: 
        vmImage: 'windows-2019'
      steps:

      - task: CopyFiles@2
        displayName: 'copy files to Build.ArtifactStagingDirectory'
        inputs:
          SourceFolder: 'AzureResourceGroupDeployment'
          Contents: '*.json'
          TargetFolder: '$(Build.ArtifactStagingDirectory)'

      - task: PublishBuildArtifacts@1
        displayName: 'publish artifacts to arm folder'
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'arm'

  - stage: Deploy_Stage
    dependsOn: 'Build_Stage'
    displayName: :'Deploy ARM templates to Azure'
    jobs:
    - job: CreateDev
      displayName: 'Create resources in Azure'
      pool: 
        vmImage: 'windows-2019'
      steps: 
      
      - task: DownloadBuildArtifacts@1
        displayName: 'download artifacts'
        inputs:
          buildType: 'current'
          downloadType: 'single'
          artifactName: 'arm'
          downloadPath: '$(System.ArtifactsDirectory)'

      - task: AzureResourceManagerTemplateDeployment@3
        displayName: 'Validate Azure resources'
        inputs:
          deploymentScope: 'Resource Group'
          azureResourceManagerConnection: 'Pay-As-You-Go(0da7ae55-f78b-410c-90fb-cef156b34a60)'
          subscriptionId: '0da7ae55-f78b-410c-90fb-cef156b34a60'
          action: 'Create Or Update Resource Group'
          resourceGroupName: 'VisualStudioOnline-0FF03BC89D6343EF8883DC94CAFE9CFD'
          location: 'East US'
          templateLocation: 'Linked artifact'
          csmFile: '$(System.ArtifactsDirectory)/arm/WebSiteSQLDatabase.json'
          csmParametersFile: '$(System.ArtifactsDirectory)/arm/WebSiteSQLDatabase.parameters.json'
          overrideParameters: '-hostingPlanName "mithun-service-plan" -skuName "F1" -skuCapacity 1 -administratorLogin "mithunnit" -administratorLoginPassword "@Aa123456" -databaseName "EmployeesDB" -collation "SQL_Latin1_General_CP1_CI_AS" -edition "Basic" -maxSizeBytes "1073741824" -requestedServiceObjectiveName "Basic" -webSiteName "mithunnit-webapp" -sqlserverName "mithunnit-sql"'
          deploymentMode: 'Validation'

      - task: AzureResourceManagerTemplateDeployment@3
        displayName: 'Deploy Azure resources'
        inputs:
          deploymentScope: 'Resource Group'
          azureResourceManagerConnection: 'Pay-As-You-Go(0da7ae55-f78b-410c-90fb-cef156b34a60)'
          subscriptionId: '0da7ae55-f78b-410c-90fb-cef156b34a60'
          action: 'Create Or Update Resource Group'
          resourceGroupName: 'VisualStudioOnline-0FF03BC89D6343EF8883DC94CAFE9CFD'
          location: 'East US'
          templateLocation: 'Linked artifact'
          csmFile: '$(System.ArtifactsDirectory)/arm/WebSiteSQLDatabase.json'
          csmParametersFile: '$(System.ArtifactsDirectory)/arm/WebSiteSQLDatabase.parameters.json'
          overrideParameters: '-hostingPlanName "mithun-service-plan" -skuName "F1" -skuCapacity 1 -administratorLogin "mithunnit" -administratorLoginPassword "@Aa123456" -databaseName "EmployeesDB" -collation "SQL_Latin1_General_CP1_CI_AS" -edition "Basic" -maxSizeBytes "1073741824" -requestedServiceObjectiveName "Basic" -webSiteName "mithunnit-webapp" -sqlserverName "mithunnit-sql"'
          deploymentMode: 'Incremental'

    - job: DeployDev
      displayName: 'Deploy apps to Azure'
      dependsOn: 'CreateDev'
      pool: 
        vmImage: 'windows-2019'
      steps:
      - checkout: none
      - task: DownloadBuildArtifacts@1
        displayName: Download WebApp.zip
        inputs:
          buildType: 'current'
          downloadType: 'single'
          artifactName: 'drop'
          itemPattern: '**/WebApp.zip'
          downloadPath: '$(System.DefaultWorkingDirectory)'
        
      - task: AzureRmWebAppDeployment@4
        displayName: 'Deploy WebApp to Azure' 
        inputs:
          ConnectionType: 'AzureRM'
          azureSubscription: 'Pay-As-You-Go(0da7ae55-f78b-410c-90fb-cef156b34a60)'
          appType: 'webApp'
          WebAppName: 'mithunnit-webapp'
          packageForLinux: '$(System.DefaultWorkingDirectory)/drop/WebApp.zip'

      - task: DownloadBuildArtifacts@1
        displayName: 'dowdnload dacpac file'
        inputs:
          buildType: 'current'
          downloadType: 'single'
          artifactName: 'dacpac'
          itemPattern: '**/*.dacpac'
          downloadPath: '$(System.DefaultWorkingDirectory)'

      - task: SqlAzureDacpacDeployment@1
        displayName: 'Deploy dacpac file to Azure' 
        inputs:
          azureSubscription: 'Pay-As-You-Go(0da7ae55-f78b-410c-90fb-cef156b34a60)'
          AuthenticationType: 'server'
          ServerName: 'mithunnit-sql.database.windows.net'
          DatabaseName: 'EmployeesDB'
          SqlUsername: 'mithunnit'
          SqlPassword: '@Aa123456'
          deployType: 'DacpacTask'
          DeploymentAction: 'Publish'
          DacpacFile: '$(System.DefaultWorkingDirectory)/dacpac/WebApp.Database.dacpac'
          IpDetectionMethod: 'AutoDetect'
        
       
      


=======
  vmImage: vs2017-win2016

variables:
  buildConfiguration: 'Release'
  Build.ArtifactStagingDirectory: 'c:\agent_work\1\a'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core sdk'
  inputs:
    packageType: 'sdk'
    version: '6.0.100'
- task: DotNetCoreCLI@2
  displayName: Restore-Nuget-Packages
  inputs:
    command: 'restore'
    projects: '**/WebApp.csproj'
- task: DotNetCoreCLI@2
  displayName: Build-Web-App
  inputs:
    command: 'build'
    projects: '**/WebApp.csproj'
    arguments: '--configuration -$(buildConfiguration)'
- task: DotNetCoreCLI@2
  displayName: Run-Unit-Tests
  inputs:
    command: 'test'
    projects: '**/WebApp.UnitTest.csproj'
    arguments: '--configuration -$(buildConfiguration)'
- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
    zipAfterPublish: True
- task: PublishBuildArtifacts@1
  displayName: 'Publish-Artifact.(WebApp.zip)'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'


    
   
>>>>>>> 40c83561318f532283b94e78522c8f7e52671ac0
