<<<<<<< HEAD
trigger:
- none

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Build_Stage
    displayName: :Build stage
    jobs:
    - job: WebApp
      displayName: 'Build WebApp'
      pool: 
        vmImage: 'windows-2019'
      steps:
       
      - task: UseDotNet@2
        inputs:
          packageType: 'sdk'
          version: '6.0.101'
      
      - task: DotNetCoreCLI@2
        displayName: 'Restore nuget packages'
        inputs:
          command: 'restore'
          projects: |
            **/*.csproj
            !**/*Tests.csproj

      - task: SonarCloudPrepare@1
        inputs:
          SonarCloud: 'SonarCloud-test'
          organization: 'mithunnit-1'
          scannerMode: 'MSBuild'
          projectKey: 'mithunnit_ARM-Template-YAML'
          projectName: 'ARM-Template-YAML'
      
      - task: DotNetCoreCLI@2
        displayName: 'Build artifact'
        inputs:
          command: 'build'
          projects: |
            **/*.csproj
            !**/*SeleniumUiTests.csproj
          arguments: '--configuration $(BuildConfiguration)'

      - task: SonarCloudAnalyze@1
    
      - task: SonarCloudPublish@1
        inputs:
          pollingTimeoutSec: '300'

      - task: DotNetCoreCLI@2
        inputs:
          command: 'test'
          projects: '**/*UnitTest.csproj'
          arguments: '--configuration $(BuildConfiguration)'

      - task: DotNetCoreCLI@2
        inputs:
          command: 'publish'
          publishWebProjects: true
          arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'
    
    
=======
trigger: 'none'

jobs:
- job: Webapp
  displayName: 'Build Web App'
  pool: 
    vmImage: 'windows-2019'
  variables:
    buildConfiguration: 'Release'

  steps:
 
  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk'
    inputs:
      packageType: 'sdk'
      version: '6.0.100'
 
  - task: DotNetCoreCLI@2
    displayName: Restore-Nuget-Packages
    inputs:
      command: 'restore'
      projects: '**/WebApp.csproj'
 
  - task: SonarCloudPrepare@1
    displayName: 'Prepare analysis on SonarCloud'
    inputs:
      SonarCloud: 'SonarCloud'
      organization: 'mithunnit'
      scannerMode: 'MSBuild'
      projectKey: 'WebAppWithDatabaseDemo-Complete'
 
  - task: DotNetCoreCLI@2
    displayName: Build-Web-App
    inputs:
      command: 'build'
      projects: '**/WebApp.csproj'
      arguments: '--configuration -$(buildConfiguration)'
 
  - task: DotNetCoreCLI@2
    displayName: Run-Unit-Tests
    inputs:
      command: 'test'
      projects: '**/WebApp.UnitTest.csproj'
      arguments: '--configuration -$(buildConfiguration)'
 
  - task: DotNetCoreCLI@2
    displayName: Publish
    inputs:
      command: publish
      publishWebProjects: True
      arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
      zipAfterPublish: True
 
  - task: SonarCloudAnalyze@1
    displayName: Run Code Analysis'
 
  - task: SonarCloudPublish@1
    displayName: 'Publish Quality Gate Result'
 
  - task: PublishBuildArtifacts@1
    displayName: 'Publish-Artifact.(WebApp.zip)'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'

- job: Database
  displayName: 'Build Database'
  pool:
    vmImage: 'windows-2019'

  steps:
 
  - task: MSBuild@1
    displayName: 'Build solution WebApp.Database.sqlproj'
    inputs:
      solution: 'WebApp.Database/WebApp.Database.sqlproj'
      msbuildArguments: '/p:OutDir=$(Build.ArtifactStagingDirectory)'
 
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact (Dacpac)'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'dacpac'

- job: Selenium
  displayName: 'Build UI Tests'
  pool:
    vmImage: 'windows-2019'
  
  steps:
  - task: NuGetToolInstaller@1
    inputs:
      versionSpec: '4.3.0'
  
  - task: NuGetCommand@2
    displayName: 'NuGet restore' 
    inputs:
      command: 'restore'
      restoreSolution: 'WebAppWithDatabase.sln'
  
  - task: MSBuild@1
    displayName: 'Build project SeleniumUiTests.csproj' 
    inputs:
      solution: 'SeleniumUiTests/SeleniumUiTests.csproj'
      msbuildArguments: '/p:OutDir=$(Build.ArtifactStagingDirectory)'
  
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: UI-Test' 
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'UI-Test'

- job: Infrastructure
  displayName: 'Copy Infrastructure files (ARM)'
  pool:
    vmImage: 'ubuntu-latest'
  
  steps:
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: ARM templates'
    inputs:
      PathtoPublish: AzureResourceGroupDeployment
      ArtifactName: 'arm'
      

    
   
>>>>>>> 40c83561318f532283b94e78522c8f7e52671ac0
